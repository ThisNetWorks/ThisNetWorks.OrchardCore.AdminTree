@model UrlTreeAdminNodeViewModel

<style asp-src="~/OrchardCore.AdminMenu/Styles/admin-menu-icon-picker.min.css" debug-src="~/OrchardCore.AdminMenu/Styles/admin-menu-icon-picker.css" at="Head" depends-on="admin"></style>

<script asp-src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.min.js" debug-src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js" asp-name="vuejs" at="Foot"></script>
<script asp-src="~/OrchardCore.AdminMenu/Scripts/admin-menu-icon-picker.min.js" debug-src="~/OrchardCore.AdminMenu/Scripts/admin-menu-icon-picker.js" at="Foot" depends-on="admin"></script>

<script asp-name="codemirror" depends-on="admin" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>
<script asp-name="codemirror-addon-display-autorefresh" at="Foot"></script>
<script asp-name="codemirror-addon-mode-simple" at="Foot"></script>
<script asp-name="codemirror-addon-mode-multiplex" at="Foot"></script>
<script asp-name="codemirror-mode-xml" at="Foot"></script>

<script asp-src="~/OrchardCore.Liquid/codemirror/liquid.js" at="Foot"></script>

<h5>@T["Lists"]</h5>

<div class="row mb-4">
    <div class="col-xl-6">
        <fieldset class="form-group">
            <label asp-for="IconForTree">@T["Icon for the tree"]</label>
            <div class="btn-toolbar icon-toolbar" role="toolbar" aria-label="Icon Selector Toolbar">

                <div class="btn-group input-group mr-2" role="group" aria-label="Icon Selector">
                    <button type="button" class="btn btn-primary sample-icon">
                        <i id="@("sample-icon-" + Html.IdFor(m => m.IconForTree))"
                           class="@(Model.IconForTree)"></i>
                    </button>
                    <input type="hidden" name="@Html.NameFor(m=>m.IconForTree)"
                           id="@Html.IdFor(m => m.IconForTree)" class="icon-val"
                           value="@Model.IconForTree" />
                    <button type="button"
                            class="btn btn-primary icon-picker-trigger"
                            data-related-node="@Html.IdFor(m => m.IconForTree)">
                        @T["Icon"]
                    </button>
                </div>

                <div class="btn-group" role="group" aria-label="Remove Icon Button">
                    <button type="button" class="btn btn-secondary remove-icon"
                            data-related-node="@Html.IdFor(m => m.IconForTree)">
                        <div style="pointer-events:none;">
                            <i class="fa fa-trash"></i>
                        </div>
                    </button>
                </div>
            </div>

        </fieldset>
    </div>
</div>

<div class="form-group row">
    <div class="col-lg">
        <label asp-for="TreeRootDisplayPattern">@T["Tree display pattern"]</label>
        <textarea asp-for="TreeRootDisplayPattern" rows="5" class="form-control"></textarea>
        <span class="hint">@T["Tree display pattern, uses liquid."]</span>
    </div>
</div>
<div class="form-group row">
    <div class="col-lg">
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" asp-for="UseItemSegmentForDisplay" checked="@Model.UseItemSegmentForDisplay" />
            <label class="custom-control-label" asp-for="UseItemSegmentForDisplay">@T["Use items url segment for display"]</label>
            <span class="hint">â€” @T["Check to use the items url segment for the display text in the menu."]</span>
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-lg">
        <label asp-for="ItemDisplayPattern">@T["Item display pattern"]</label>
        <textarea asp-for="ItemDisplayPattern" rows="5" class="form-control"></textarea>
        <span class="hint">@T["Item display pattern, uses liquid."]</span>
    </div>
</div>

<div id="iconPickerVue">
    <div class="modal" id="iconPickerModal" tabindex="-1" role="dialog" aria-labelledby="iconPickerModal" aria-hidden="true">
        <div class="modal-dialog" role="dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@T["Pick an icon"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body p-0">
                    <div id="inline-picker" class="icp icp-auto" data-placement="inline"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script at="Foot" depends-on="jquery">
    $(function () {
        $('.add-parent-link-checkbox').on('click', function (e) {

            var iconPickerFieldSet = $(e.target).closest('.add-parent-link-fieldset').siblings('.icon-picker-for-content-type');

            var selected = $(e.target).prop('checked');
            console.log(iconPickerFieldSet[0]);
            selected ? iconPickerFieldSet.removeClass('collapse') : iconPickerFieldSet.addClass('collapse');

        });

        $('.icon-picker-trigger').on('click', function (e) {

            var node = $(e.target).data('related-node');
            iconPickerVue.show(node, 'sample-icon-' + node);
        });

        $('button.remove-icon').on('click', function (e) {
            var node = $(e.target).data('related-node');
            $('#' + node).val('');
            $('#sample-icon-' + node).replaceWith('<i id="sample-icon-' + node + '" class=" "></i>'); // changing the class is not enough.
        });
    });
</script>

<script at="Foot" depends-on="jquery">
    //<![CDATA[
    $(function () {
        editor1 = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.TreeRootDisplayPattern)'), {
            autoRefresh: true,
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        editor2 = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.ItemDisplayPattern)'), {
            autoRefresh: true,
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
    });
    //]]>
</script>